@model HardwareStore.ViewModels.Product.ProductListViewModel
@{
    ViewBag.Title = "Search";
    Layout = "_UserLayout";
    var brandFilterDisplayNone = "";
    var categoryFilterDisplayNone = "";
}

<div class="searchInfo">
    <div class="path">
        <a href="@Url.Action("Index", "Home")">Kompex</a>
        <div class="break">></div>
        <a href="">"@Model.SearchText"</a>
    </div>
    <div class="searchResults">
        <h1 class="searchedPhrase">"@Model.SearchText"</h1>
        <h1 class="quantity">(@Model.Products.Count wyników)</h1>
    </div>
</div>
<div class="mobileFilterStrip">
    <button id="showMobileFilters">Pokaż wszystkie filtry</button>

    <select>
        <option value="1">Trafność</option>
        <option value="1">Cena rosnąco</option>
        <option value="1">Cena malejąco</option>
    </select>
</div>
<div class="productListContent">
    <div class="filterHolder">
        @Html.HiddenFor(d => d.SearchModel.SearchText)
        <!--temp  -->
        <button id="closeFiltersBtn">X</button>
        <!--  -->
        <div class="filtersCaptionHolder">
            <h1>Filtry</h1>
            <a href="@Url.Action("Search", new{ SearchText = Model.SearchText})" class="clearFiltersBtn">Wczyść filtry</a>
        </div>

        @if (Model.SearchModel.BrandFilters.Count > 1)
        {
    <div class="filterGroup">
        <h2 class="filterGroupName">Producent</h2>

        @for (int i = 0; i < Model.SearchModel.BrandFilters.Count; i++)
        {
            <div class="filter brandFilter @brandFilterDisplayNone">
                @Html.CheckBoxFor(d => Model.SearchModel.BrandFilters[i].IsChecked, new { @class = "brandInput" })
                @Html.LabelFor(d => Model.SearchModel.BrandFilters[i].IsChecked, (Model.SearchModel.BrandFilters[i].Brand.Name@*+" ("+Model.Products.Count(d => d.BrandId == Model.SearchModel.BrandFilters[i].Brand.BrandId)+")"*@))
                @Html.HiddenFor(d => Model.SearchModel.BrandFilters[i].Brand.BrandId, new { @class = "brandId" })
                @Html.HiddenFor(d => Model.SearchModel.BrandFilters[i].Brand.Name)
            </div>

            if (i == 4)
            {
                brandFilterDisplayNone = "displayNone";
            }
        }
        @if (Model.SearchModel.BrandFilters.Count > 5)
        {
            <button id="showBrands" class="expandListBtn">Pokaż więcej</button>
        }
    </div>
        }
        <div class="filterGroup">

            <h2 class="filterGroupName">Cena</h2>
            <div class="filter filterPrice">
                @Html.TextBoxFor(d => d.MinPrice, new { Placeholder = "od", type = "number", id = "minPrice" })
                <span>-</span>
                @Html.TextBoxFor(d => d.MaxPrice, new { Placeholder = "do", type = "number", id = "maxPrice" })
            </div>
        </div>

        @if (Model.SearchModel.CategoryFilters.Count > 1)
        {


    <div class="filterGroup">
        <h2 class="filterGroupName">Kategoria</h2>

        @for (int i = 0; i < Model.SearchModel.CategoryFilters.Count; i++)
        {
            <div class="filter categoryFilter @categoryFilterDisplayNone">
                @Html.CheckBoxFor(d => Model.SearchModel.CategoryFilters[i].IsChecked, new { @class = "categoryInput" })
                @Html.LabelFor(d => Model.SearchModel.CategoryFilters[i].IsChecked, Model.SearchModel.CategoryFilters[i].Category.Name)
                @Html.HiddenFor(d => Model.SearchModel.CategoryFilters[i].Category.CategoryId, new { @class = "categoryId" })
                @Html.HiddenFor(d => Model.SearchModel.CategoryFilters[i].Category.Name)
            </div>
            if (i == 4)
            {
                categoryFilterDisplayNone = "displayNone";
            }
        }
        @if (Model.SearchModel.CategoryFilters.Count > 5)
        {
            <button id="showCategories" class="expandListBtn">Pokaż więcej</button>
        }
        </div>
        }
        <form class="filterGroup">
            @Html.HiddenFor(d => d.Brands, new { @id = "brandText" })
            @Html.HiddenFor(d => d.Categories, new { @id = "categoryText" })
            @Html.HiddenFor(d=>d.MaxPrice, new { @id = "maxPriceText"})
            @Html.HiddenFor(d=>d.MinPrice, new { @id = "minPriceText"})
            @Html.HiddenFor(d => d.SearchText)

            <button id="filterBtn" type="submit">Filtruj</button>
        </form>
    </div>
    <div class="productList">

        @foreach (var item in Model.Products)
        {
            <a href="@Url.Action("Details", "Products", new { id = item.ProductId })" class="product">
                <img src="@item.Gallery?.ImageGalleries?.OrderBy(d=>d.Order).FirstOrDefault()?.Image?.Url"
                     alt="@item.Gallery?.ImageGalleries?.OrderBy(d=>d.Order).FirstOrDefault()?.Image?.Name">
                <h3>@item.Brand.Name @item.Name</h3>


                <h4>@(item.Price.ToString("F")) zł</h4>
            </a>
        }


    </div>
</div>
